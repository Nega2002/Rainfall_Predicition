# -*- coding: utf-8 -*-
"""Rainfall_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bIHsMjHGdOL5OlhtxpN6qbMR_7-7Zh5r
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/weatherAUS.csv')
df.head(2)

df.describe()

df.shape

df.info()

df=df.drop(["Evaporation","Rainfall","Sunshine","Cloud9am","Cloud3pm","Location","Date","RainToday"],axis=1)
df.head()

df = df.dropna(axis = 0)
df.shape

df.columns

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['WindGustDir'] = le.fit_transform(df['WindGustDir'])
df['WindDir9am'] = le.fit_transform(df['WindDir9am'])
df['WindDir3pm'] = le.fit_transform(df['WindDir3pm'])
#df['RainToday'] = le.fit_transform(df['RainToday'])
df['RainTomorrow'] = le.fit_transform(df['RainTomorrow'])

x = df.drop(['RainTomorrow'], axis = 1)
y = df['RainTomorrow']

x.head()

plt.figure(figsize = (8,8))
sns.scatterplot(x = 'MaxTemp', y = 'MinTemp', hue = 'RainTomorrow' , palette = 'inferno',data = df)

plt.figure(figsize = (8,8))
sns.scatterplot(x = 'Humidity9am', y = 'Temp9am', hue = 'RainTomorrow' , palette = 'inferno',data = df)

plt.figure(figsize = (8,8))
sns.heatmap(df.corr())

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression(max_iter=1000)
lr.fit(x_train,y_train)
predictions = lr.predict(x_test)

print('Confusion Matrix:\n',confusion_matrix(y_test, predictions))

print('Classification Report:\n',classification_report(y_test, predictions))

print('Accuracy:\n',accuracy_score(y_test, predictions)*100)